#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
File: gengo
Author: Einar Uvsl√∏kk <einar.uvslokk@linux.com>
License: GNU General Public License (GPL) version 3 or later
Description: Main script for the Gengo GObject generator.
"""
import os
import sys
import locale
import gettext
from gettext import gettext as _
import optparse

import ggo

if __name__ == "__main__":
    usage = _("""%prog [options] ClassName

    Where ClassName is the name of the GObject class to generate boilerplate
    code for. This must me in CamelCase.""")
    p = optparse.OptionParser(usage=usage)
    p.add_option(
        "--gtk",
        dest="gtk", action="store_true",
        help=_("Run the Gtk frontend. This flag overrides all other options"))
    p.add_option(
        "-a", "--author",
        dest="author", action="store", type="string",
        help=_("The name of the author to include in the source/header comments"))
    p.add_option(
        "-e", "--email",
        dest="email", action="store", type="string",
        help=_("The email adress to include in the source/header comments"))
    p.add_option(
        "--no-license",
        dest="no_license", action="store_true",
        help=_("Do not include GPL license boilerplate."))

    (opt, args) = p.parse_args()

    try:
        from ggo.defs import DATA_DIR, PKG_DATA_DIR, VERSION, LOCALE_DIR
        _defs_present = True
    except ImportError:
        DATA_DIR = PKG_DATA_DIR = VERSION = LOCALE_DIR = "" 
        _defs_present = False

    if not _defs_present:
        _prefix = "/usr"
        DATA_DIR = os.path.join(_prefix, "share")
        LOCALE_DIR = os.path.join(_prefix, "share", "locale")
        _me = os.path.abspath(os.path.dirname(__file__))
        PKG_DATA_DIR = os.path.join(_me, "data")

    ggo.DATA_DIR = DATA_DIR
    ggo.PKG_DATA_DIR = PKG_DATA_DIR
    ggo.APP_NAME = "gengo"

    locale.setlocale(locale.LC_ALL, None)
    gettext.bindtextdomain(ggo.APP_NAME, LOCALE_DIR)
    gettext.textdomain(ggo.APP_NAME)
    gettext.install(ggo.APP_NAME)

    if opt.gtk:
        from ggo import window
        sys.exit(window.main())

    if len(args) < 1:
        msg = [_("You need to provide a class name."),
               _("Run {prog} --help for more information.")]
        print >> sys.stderr, "\n".join(msg).format(prog=sys.argv[0])
        sys.exit(1)

    no_license = opt.no_license
    author = opt.author if opt.author else ""
    email = opt.email if opt.email else ""

    from ggo import gengo
    gengo.create_gobject_files(args[0], author, email, no_license)
